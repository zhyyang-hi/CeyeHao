# config 
mode: train # train / eval / infer
model: CEyeNet
model_checkpoint: '../log/CEyeNet/CEyeNet'
profile_size: [200, 200] # 100 / 200
simg_res: [200, 200]
device: cuda # cuda / cpu
amp: True

# building blocks for model_cfg
model_cfg:
  # unet_cfg 
  base_num_features: 64
  num_pool: 4
  down_kwargs:
    block_type: conv
    num_conv: 2
    kernel_size: [3, 3]
    dilation: [1, 1]
  up_kwargs:
    block_type: conv
    num_conv: 2
    kernel_size: [3, 3]
    dilation: [1, 1]
    #  configs for compeye conv layers
  # ceye_cfg
  compeye_kwargs:
    pool_type: avg
    tp_order: tile_first
    tile_factor: 7
  # unpp_cfg
  # input_channels: 1
  # base_num_features: 64
  # num_classes: 2
  # num_pool: 4
  # profile_size: [200, 200]

  # gvtn_cfg
  # conf_gvtn:
  #     depth: 5
  #     first_output_filters: 64
  #     encoding_block_sizes: [1, 1, 1, 1, 0]
  #     downsampling: ['down_gto_v1', 'down_gto_v1', 'down_gto_v1', 'down_gto_v1']
  #     bottom_block: ['same_gto']
  #     decoding_block_sizes: [1, 1, 1, 1]
  #     upsampling: ['up_gto_v1', 'up_gto_v1', 'up_gto_v1', 'up_gto_v1']
  #     skip_method: concat
  #     out_kernel_size: 1
  #     out_kernel_bias: False
  # conf_basic_ops:
  #     kernel_initializer: None
  #     momentum: 0.997
  #     epsilon: 1.0e-05
  #     relu_type: relu6
  # conf_attn_same:
  #     key_ratio: 1
  #     value_ratio: 1
  #     num_heads: 2
  #     dropout_rate: 0.0
  #     use_softmax: False
  #     use_bias: True
  # conf_attn_up:
  #     key_ratio: 1
  #     value_ratio: 1
  #     num_heads: 2
  #     dropout_rate: 0
  #     use_softmax: False
  #     use_bias: True
  # conf_attn_down:
  #     key_ratio: 1
  #     value_ratio: 1
  #     num_heads: 2
  #     dropout_rate: 0.0
  #     use_softmax: False
  #     use_bias: True

data_cfg: 
  # configs needed for data augmentation
  tilepool: False
  x_axial_flip: False
  x_randinv: True
  x_rand_axial_translate: True
  sym_agmentation: 0
  # configs needed for loading dataset  
  data_root_dir: ../dataset
  dataset_size: [9000, 1000]
  train_bs: 8
  valid_bs: 8
  workers: 4

pix_acc_cfg: 
  op_flags: 
    - round
    - match
  matching_error_thresholds: 0.01
percep_acc_cfg:
  include_pix_acc: True
  perceptual_weights: [4, 4, 4, 4, 4]

train_cfg:
  max_epoch: 300
  log_dir: ../log
  log_interval: 225
  lr_init: 0.001
  factor: 0.1
  milestones: [30, 80]
  weight_decay: 0.0005
  momentum: 0.9
  is_warmup: True
  warmup_epochs: 1
  lr_final: 1.0e-05
  lr_warmup_init: 0.0
  hist_grad: False
  loss_weights: [1, 1, 1, 1]

loss_cfg:
  components: 
    - l1
    - l1_grad
    # l2
    # perceptual
  weights: [1, 1] # length of weights should be equal to the number of components

eval_cfg:
  result_dir: ''
  exports:
    eval_results: True
    cfg: True
    model_checkpoint: False
    plot:
      tt_pred: False
      tt_label: False
  programs:
    accuracy: True
    time: True

